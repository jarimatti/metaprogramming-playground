defmodule Metaprogramming.MessageClient do

  require Metaprogramming.MessageTest
  alias Metaprogramming.MessageTest

  # TODO: Dialyzer does not like the types that have been generated by the macro.
  @spec handle(MessageTest.t()) :: String.t()
  #@spec handle(MessageTest.StringMessage.t()) :: String.t()
  #@spec handle(%MessageTest.StringMessage{}) :: String.t()
  # @spec handle(MessageTest.TestMessage.t()) :: String.t()
  def handle(%MessageTest.StringMessage{}) do
    "string message"
  end

  def handle(%MessageTest.TestMessage{}) do
    "string message"
  end

  @spec stuff :: String.t()
  def stuff do
    handle(%MessageTest.StringMessage{to: "foobar"})
  end
end
